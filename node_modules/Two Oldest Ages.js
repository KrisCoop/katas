// The two oldest ages function/method needs to be completed. It should take an array of numbers as its argument and return
//  the two highest numbers within the array. The returned value should be an array in the format [second oldest age, oldest age].

// The order of the numbers passed in could be any order. The array will always include at least 2 items.

// For example:

// twoOldestAges( [1, 2, 10, 8] ) // should return [8, 10]

function twoOldestAges(ages){
    return  ages.sort((a, b)=>{
        return a - b
    }).slice(-2)
}



// return the two oldest/oldest ages within the array of ages passed in.
//////////////////////////////////gross attempt 1:
// let ages = [1, 2, 8, 10];

// function twoOldestAges(ages){
// let num1 = 0;
// let num2 = 0;
// let newArr = [];

//     let max1 = ages.reduce(function(a, b) {
//         return Math.max(a, b);
//     })
// console.log(max1)
//     for (i = 0; i < ages.length; i++) {
//         if (ages[i] === 10) {
//             num1 = ages.splice(i)
//         }
//     }
// console.log(num1)
//     let max2 = ages.reduce(function(a, b) {
//         return Math.max(a, b);
// })
// console.log(max2)
//     // for (i = 0; i < ages.length; i++) {
//     //     if (ages[i] === 8) {
//     //         num2 = ages.splice(i)
//     //     }
//     // }

// newArr = [max1, max2];
// console.log(newArr)
// console.log(num2)
// }


// console.log(twoOldestAges(ages))

// var arr = [1,2,3];
// var max = arr.reduce(function(a, b) {
//     return Math.max(a, b);
// });

// TODO: Add your tests here
// Starting from Node 10.x, [Mocha](https://mochajs.org) is used instead of our custom test framework.
// [Codewars' assertion methods](https://github.com/Codewars/codewars.com/wiki/Codewars-JavaScript-Test-Framework)
// are still available for now.
//
// For new tests, using [Chai](https://chaijs.com/) is recommended.
// You can use it by requiring:
//     const assert = require("chai").assert;
// If the failure output for deep equality is truncated, `chai.config.truncateThreshold` can be adjusted.

describe("Solution", function() {
    it("should test for something", function() {
      // Test.assertEquals(1 + 1, 2);
      // assert.strictEqual(1 + 1, 2);
    });
  });